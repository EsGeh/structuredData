#N canvas 0 30 798 854 10;
#N canvas 0 30 990 854 example 0;
#X floatatom 120 160 5 0 0 0 - - -;
#X msg 223 80 list x y z;
#X msg 207 47 list 1 b c d;
#X msg 80 47 list 1 b c d;
#X msg 226 111 1 b c d;
#X msg 104 73 1 b c d;
#X msg 139 107 1;
#X msg 301 112 1;
#X obj 120 137 sgListIsEqual;
#X connect 1 0 8 1;
#X connect 2 0 8 1;
#X connect 3 0 8 0;
#X connect 4 0 8 1;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 8 1;
#X connect 8 0 0 0;
#X restore 177 308 pd example;
#X msg 456 99 a b c;
#X text 415 75 Notice: all objects should treat inputs as lists \,
e.g.;
#X msg 646 98 list a b c;
#X text 502 98 should be treated like;
#N canvas 0 30 798 854 UnList(Rev) 0;
#X msg 194 128 list a b c 1;
#X msg 285 129 a b c 1;
#X obj 70 123 bng 15 250 50 0 empty empty get_next 17 7 0 10 -262144
-1 -1;
#X text 194 100 set list;
#X msg 558 131 list a b c 1;
#X msg 649 132 a b c 1;
#X obj 434 126 bng 15 250 50 0 empty empty get_next 17 7 0 10 -262144
-1 -1;
#X text 558 103 set list;
#X obj 124 176 sgListPop;
#X obj 488 179 sgListPopLast;
#X obj 444 214 print empty;
#X obj 541 220 print;
#X obj 440 192 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 174 215 print;
#X obj 80 211 print empty;
#X obj 82 187 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X connect 0 0 8 1;
#X connect 1 0 8 1;
#X connect 2 0 8 0;
#X connect 4 0 9 1;
#X connect 5 0 9 1;
#X connect 6 0 9 0;
#X connect 8 0 14 0;
#X connect 8 0 15 0;
#X connect 8 1 13 0;
#X connect 9 0 10 0;
#X connect 9 0 12 0;
#X connect 9 1 11 0;
#X restore 172 136 pd UnList(Rev) example;
#X text 13 198 serialize:;
#X text 15 111 unpack piece by piece:;
#N canvas 0 30 990 411 example 0;
#X obj 134 216 sgSerialize;
#X msg 103 144 list a b c 1;
#X msg 138 174 a b c 1;
#X obj 134 239 print;
#X msg 250 143 list a b c 1;
#X msg 285 173 a b c 1;
#X obj 281 238 print;
#X obj 281 215 sgSerializeRev;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 7 0 6 0;
#X restore 177 219 pd example;
#X text 15 28 create list by accumulating messages:;
#N canvas 0 30 798 854 example 0;
#X obj 152 166 sgList;
#X msg 223 75 a \, b \, c \, 1;
#X msg 203 52 clear;
#X obj 117 116 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 226 104 list clear a b c;
#X text 199 23 messages to accumulate \, clear to clear;
#X msg 633 151 a \, b \, c \, 1;
#X msg 613 128 clear;
#X obj 527 192 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 636 180 list clear a b c;
#X text 609 99 messages to accumulate \, clear to clear;
#X text 564 53 same as before \, but messages are PREPENDED:;
#X obj 562 265 print;
#X obj 152 189 print;
#X text 86 97 bang to output;
#X text 433 191 bang to output;
#X obj 562 242 sgListRev;
#X connect 0 0 13 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 0 0;
#X connect 4 0 0 1;
#X connect 6 0 16 1;
#X connect 7 0 16 1;
#X connect 8 0 16 0;
#X connect 9 0 16 1;
#X connect 16 0 12 0;
#X restore 173 63 pd example;
#X text 11 346 manipulate lists;
#X text 11 284 check condition on list;
#N canvas 0 30 798 854 example 0;
#X obj 46 171 sgListDel 1;
#X msg 69 111 list a b c 1;
#X obj 50 573 print found;
#X obj 436 581 print not found;
#X msg 157 112 a b c 1;
#X msg 219 110 bang;
#X text 117 156 index (init \$1);
#X text 317 312 index (\$1);
#X text 157 255 extract single element;
#X text 151 15 click to send:;
#X obj 46 194 print;
#X msg 170 277 list a b c 1;
#X msg 258 278 a b c 1;
#X msg 320 276 bang;
#X obj 170 331 print;
#X obj 170 308 sgListGet 1;
#X msg 109 491 list a b c 1;
#X msg 275 492 bang;
#X msg 197 492 a b c 1 a;
#X text 174 439 2 inlet (init \$1): element to find;
#X text 174 423 1 inlet: list to search;
#X text 35 591 list of all indices where to find the element;
#X msg 399 488 1;
#X msg 398 515 a;
#X obj 227 543 sgListFindAll a;
#X connect 0 0 10 0;
#X connect 1 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 11 0 15 0;
#X connect 12 0 15 0;
#X connect 13 0 15 0;
#X connect 15 0 14 0;
#X connect 16 0 24 0;
#X connect 17 0 24 0;
#X connect 18 0 24 0;
#X connect 22 0 24 1;
#X connect 23 0 24 1;
#X connect 24 0 2 0;
#X connect 24 1 3 0;
#X restore 175 368 pd example;
#X obj 28 245 sgSerializeRev;
#X obj 34 477 sgListFindAll;
#X obj 27 49 sgList;
#X obj 27 74 sgListRev;
#X obj 28 221 sgSerialize;
#X obj 32 309 sgListIsEqual;
#X obj 30 370 sgListDel \$1;
#X obj 30 396 sgListGet \$1;
#X obj 29 138 sgListPop;
#X obj 29 162 sgListPopLast;
#X obj 34 451 sgListContains;
#N canvas 0 30 942 854 example 0;
#X msg 293 48 symbol a;
#X msg 130 19 list a c 1 2 3;
#X msg 333 76 symbol b;
#X msg 372 49 1;
#X obj 160 240 sgListContains b;
#X floatatom 160 263 5 0 0 0 - - -;
#X msg 289 195 symbol a;
#X msg 126 166 list a c 1 2 3;
#X msg 329 223 symbol b;
#X msg 368 196 1;
#X msg 128 199 list a b c 2 3;
#X obj 164 93 sgListFindAll b;
#X obj 164 116 print;
#X msg 132 52 list a b c 2 3 b;
#X text 461 73 get indices of all ocurrences of some element in the
list;
#X connect 0 0 11 1;
#X connect 1 0 11 0;
#X connect 2 0 11 1;
#X connect 3 0 11 1;
#X connect 4 0 5 0;
#X connect 6 0 4 1;
#X connect 7 0 4 0;
#X connect 8 0 4 1;
#X connect 9 0 4 1;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 13 0 11 0;
#X restore 176 448 pd example;
#X text 30 519 (TODO: find only first element);
#X text 15 423 search lists;
