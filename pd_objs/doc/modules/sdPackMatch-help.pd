#N canvas 0 30 844 722 10;
#N canvas 0 30 846 854 basic 0;
#X msg 144 85 list x;
#X obj 131 127 sdPackFromHuman;
#X obj 230 177 sdPackMatch;
#X obj 230 200 print;
#X obj 176 211 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 100 86 list;
#X msg 197 86 list y;
#X msg 382 107 clear \, add pat3 ? \, add pat4 *;
#X msg 381 79 clear \, add pat1 \, add pat2 x;
#X obj 381 56 loadbang;
#X obj 294 202 print reject;
#X obj 380 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 2 1 11 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 2 0;
#X connect 8 0 2 0;
#X connect 9 0 8 0;
#X restore 60 40 pd basic;
#X msg 307 318 pack ( param ( ?val ) );
#X msg 309 82 ?;
#X msg 310 111 *;
#X msg 308 255 pack ( * );
#X text 439 80 single atom;
#X text 443 108 match arbitrary list;
#X text 441 252 pack with arbitrary content;
#X text 466 297 val can be any atom \, its value is matched into and
bound to "val", f 30;
#X msg 306 389 pack ( * val ( ?val ) );
#X text 277 28 sdPack pattern syntax:;
#N canvas 0 30 846 854 packs 0;
#X obj 102 250 sdPackFromHuman;
#X obj 201 300 sdPackMatch;
#X obj 201 323 print;
#X obj 147 334 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 385 144 clear \, add pattern3 ? ( ) \, add pattern4 ? ( x )
;
#X obj 116 636 sdPackFromHuman;
#X obj 215 686 sdPackMatch;
#X obj 215 709 print;
#X obj 161 720 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 198 537 list p ( );
#X msg 208 562 list p ( x );
#X msg 54 507 list p1 ( ) p2 ( );
#X msg 398 491 clear \, add pat1 p1 ( ) p2 ( ) \, add pat2 p1 ( x )
p2 ( y );
#X msg 46 541 list p1 ( x ) p2 ( y );
#X msg 399 531 clear \, add pattern3 ? ( x ) ? ( ? ) \, add pattern4
? ( x );
#X obj 386 82 loadbang;
#X obj 400 468 loadbang;
#X obj 263 323 print reject;
#X obj 349 324 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 280 711 print reject;
#X obj 366 712 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 399 619 clear \, add pattern1 * p2 ( ) \, add pattern2 * p1
( );
#X msg 400 654 clear \, add pattern1 * p2 ( ) p1 ( );
#X msg 92 469 list p1 ( ) p2 ( ) p3 ( x );
#X msg 399 387 clear \, add pattern1 * p2 ( );
#X msg 40 121 list p ( );
#X msg 77 176 list p ( x );
#X msg 185 151 list q ( );
#X msg 194 177 list q ( x );
#X msg 384 105 clear \, add pattern1 p ( ) \, add pattern2 p ( x )
;
#X msg 383 187 clear \, add pattern1 p ( * );
#X msg 393 234 clear \, add pattern1 * p ( );
#X msg 151 220 list p ( q ( x ) );
#X msg 390 274 clear \, add pattern1 p ( * q ( x ) );
#X text 587 384 input must contain an empty "p2" pack, f 28;
#X msg 400 579 clear \, add pattern1 p ( * );
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 1 1 17 0;
#X connect 1 1 18 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 8 0;
#X connect 6 1 19 0;
#X connect 6 1 20 0;
#X connect 9 0 5 0;
#X connect 10 0 5 0;
#X connect 11 0 5 0;
#X connect 12 0 6 0;
#X connect 13 0 5 0;
#X connect 14 0 6 0;
#X connect 15 0 29 0;
#X connect 16 0 12 0;
#X connect 21 0 6 0;
#X connect 22 0 6 0;
#X connect 23 0 5 0;
#X connect 24 0 6 0;
#X connect 25 0 0 0;
#X connect 26 0 0 0;
#X connect 27 0 0 0;
#X connect 28 0 0 0;
#X connect 29 0 1 0;
#X connect 30 0 1 0;
#X connect 31 0 1 0;
#X connect 32 0 0 0;
#X connect 33 0 1 0;
#X connect 35 0 6 0;
#X restore 61 183 pd packs;
#X msg 308 205 * a b c;
#X text 443 206 invalid!;
#X msg 308 165 * a ( b ) c ( d );
#X text 441 155 any sequence of packs containing the packs a ( b )
and c ( d ) in any order, f 38;
#X text 467 368 pack must contain a "val" package \, but consist of
other arbitrary content. "val" is matched and bound., f 33;
#X text 549 463 match any analog pack containing an index pack and
bind any content in despite the index pack, f 36;
#N canvas 0 30 803 722 bind_values 0;
#X obj 136 705 sdPackFromHuman;
#X obj 203 769 sdPackMatch;
#X obj 203 792 print;
#X obj 149 803 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 396 568 loadbang;
#X obj 265 792 print reject;
#X obj 351 793 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 144 85 list x;
#X obj 131 127 sdPackFromHuman;
#X obj 230 177 sdPackMatch;
#X obj 230 200 print;
#X obj 176 211 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 100 86 list;
#X msg 197 86 list y;
#X obj 385 27 loadbang;
#X obj 294 202 print reject;
#X obj 380 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 385 50 clear \, add pat1 ?val;
#X msg 396 592 clear \, add pattern1 ?pack-type ( );
#X msg 38 561 list p ( );
#X msg 63 590 list p ( x );
#X msg 170 549 list q ( );
#X msg 180 574 list q ( x );
#X msg 410 649 clear \, add pattern2 p ( ?val );
#X msg 398 617 clear \, add pattern1 ?pack-type ( * );
#X obj 132 418 sdPackFromHuman;
#X obj 199 482 sdPackMatch;
#X obj 199 505 print;
#X obj 145 516 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 392 281 loadbang;
#X obj 261 505 print reject;
#X obj 347 506 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 58 294 list p ( ) q ( x );
#X msg 64 261 list p ( );
#X msg 185 641 list analog ( a ( 2 ) b ( 3 ) c ( 4 ) ), f 21;
#X msg 184 603 list analog ( index ( 2 ) b ( 3 ) c ( 4 ) ), f 21;
#X msg 115 329 list p ( ) q ( x ) r ( y );
#X text 643 334 <-;
#X text 185 296 <-;
#X msg 381 90 clear \, add pat4 everything=[ * =];
#X msg 433 224 clear \, add pat1 test=[ p ( ) =];
#X msg 392 305 clear \, add pattern1 * test=[ p ( ) =];
#X msg 392 336 clear \, add pattern1 test=[ * p ( ) =];
#X msg 409 369 clear \, add pattern1 * test=[ q ( * ) =];
#X msg 407 401 clear \, add pattern1 test=[ * =] q ( * );
#X msg 407 433 clear \, add pattern1 test=[ * =] q ( ?qval );
#X msg 393 462 clear \, add pattern1 other=[ * =] qpack=[ q ( * ) =]
;
#X msg 416 685 clear \, add pattern1 p ( content=[ * =] );
#X msg 422 710 clear \, add pattern1 * p ( * a_packet=[ a ( * ) =]
);
#X msg 414 741 clear \, add pat1 analog ( content=[ * =] index ( *
) );
#X msg 416 769 clear \, add pat1 all=[ analog ( * index ( * ) ) =]
;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 1 1 5 0;
#X connect 1 1 6 0;
#X connect 4 0 18 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 0 11 0;
#X connect 9 1 15 0;
#X connect 9 1 16 0;
#X connect 12 0 8 0;
#X connect 13 0 8 0;
#X connect 14 0 17 0;
#X connect 17 0 9 0;
#X connect 18 0 1 0;
#X connect 19 0 0 0;
#X connect 20 0 0 0;
#X connect 21 0 0 0;
#X connect 22 0 0 0;
#X connect 23 0 1 0;
#X connect 24 0 1 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 26 0 28 0;
#X connect 26 1 30 0;
#X connect 26 1 31 0;
#X connect 29 0 41 0;
#X connect 32 0 25 0;
#X connect 33 0 25 0;
#X connect 34 0 0 0;
#X connect 35 0 0 0;
#X connect 36 0 25 0;
#X connect 39 0 9 0;
#X connect 40 0 26 0;
#X connect 41 0 26 0;
#X connect 42 0 26 0;
#X connect 43 0 26 0;
#X connect 44 0 26 0;
#X connect 45 0 26 0;
#X connect 46 0 26 0;
#X connect 47 0 1 0;
#X connect 48 0 1 0;
#X connect 49 0 1 0;
#X connect 50 0 1 0;
#X restore 53 330 pd bind_values;
#N canvas 0 30 1598 543 example 0;
#X obj 101 191 sdPackFromHuman;
#X obj 176 274 sdPackMatch;
#X obj 176 297 print;
#X obj 122 308 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 272 188 loadbang;
#X obj 238 297 print reject;
#X obj 331 295 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 101 132 list trigger ( index ( 0 ) value ( \$1 ) ), f 21;
#X obj 101 109 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 272 213 clear \, add_script pat1 ( trigger ( * index ( ?index
) value ( 1 ) ) ) ( Print ( Pack ( start Pack ( pitch ( $ ( index )
) ) Pack ( volume 1 ) ) ) Out ( ) );
#X text 359 114 example: filter all trigger "on" messages and translate
them into "start" events for some obscure instrument;
#X msg 305 12 list trigger 6 index 1 0 value 1 1 \, list trigger 6
index 1 0 value 1 1, f 21;
#X obj 237 682 sdPackMatch;
#X obj 286 560 loadbang;
#X msg 276 589 clear \, add_script volume ( analog ( * index ( 0 )
value ( ?value ) ) ) ( Print ( Pack ( volume $ ( value ) ) ) Out (
) );
#X text 146 446 ok;
#X msg 222 527 list analog 6 index 1 1 value 1 0;
#X text 211 507 reject:;
#X msg 144 464 list analog 6 index 1 0 value 1 0;
#X obj 208 722 print;
#X obj 314 721 print reject;
#X text 382 551 filter "analog" events (with index == 0) and resend
them as volume changes:;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 1 1 5 0;
#X connect 1 1 6 0;
#X connect 4 0 9 0;
#X connect 7 0 0 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 11 0 1 0;
#X connect 12 0 19 0;
#X connect 12 1 20 0;
#X connect 13 0 14 0;
#X connect 14 0 12 0;
#X connect 16 0 12 0;
#X connect 18 0 12 0;
#X restore 57 719 pd example;
#N canvas 0 30 803 722 pattern+script 0;
#X msg 134 196 list x;
#X obj 121 238 sdPackFromHuman;
#X obj 209 420 print;
#X obj 155 431 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 90 197 list;
#X msg 187 197 list y;
#X obj 375 138 loadbang;
#X obj 273 422 print reject;
#X obj 359 423 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 375 161 clear \, add_script pat1 ( ?val ) ( Print ( $ ( val
) ) Out ( ) );
#X text 392 62 syntax: add_script <pattern_name> ( ...pattern... )
( ...script... );
#X text 421 97 if the pattern matches \, the script is executed with
variables set to the values bound in the pattern;
#X obj 209 397 sdPackMatch pack_type;
#X msg 422 356 set pack_type someEvent;
#X obj 422 332 loadbang;
#X text 403 310 there can be "global variables" (which surwive each
run);
#X msg 371 231 clear \, add_script pat4 ( everything=[ * =] ) ( Print
( Pack ( $ ( pack_type ) $ ( everything ) ) ) Out ( ) );
#X connect 0 0 1 0;
#X connect 1 0 12 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 9 0;
#X connect 9 0 12 0;
#X connect 12 0 2 0;
#X connect 12 0 3 0;
#X connect 12 1 7 0;
#X connect 12 1 8 0;
#X connect 13 0 12 0;
#X connect 14 0 13 0;
#X connect 16 0 12 0;
#X restore 58 513 pd pattern+script;
#X msg 307 470 analog ( content=[ * =] index ( * ) );
#N canvas 0 30 844 722 test_performance 0;
#X msg 341 62 clear \, add_script out_vol ( key ( * symbol ( a ) value
( 1 ) ) ) ( Print ( Pack ( play Pack ( pitch 0 ) ) ) Out ( list ) )
\, add_script out_vol ( key ( * symbol ( s ) value ( 1 ) ) ) ( Print
( Pack ( play Pack ( pitch 2 ) ) ) Out ( list ) ) \, add_script out_vol
( key ( * symbol ( d ) value ( 1 ) ) ) ( Print ( Pack ( play Pack (
pitch 4 ) ) ) Out ( list ) ) \, add_script out_vol ( key ( * symbol
( f ) value ( 1 ) ) ) ( Print ( Pack ( play Pack ( pitch 5 ) ) ) Out
( list ) ) \, add_script out_vol ( key ( * symbol ( g ) value ( 1 )
) ) ( Print ( Pack ( play Pack ( pitch 7 ) ) ) Out ( list ) ) \, add_script
out_vol ( key ( * symbol ( h ) value ( 1 ) ) ) ( Print ( Pack ( play
Pack ( pitch 9 ) ) ) Out ( list ) ) \, add_script out_vol ( key ( *
symbol ( j ) value ( 1 ) ) ) ( Print ( Pack ( play Pack ( pitch 11
) ) ) Out ( list ) ) \, add_script out_vol ( key ( * symbol ( k ) value
( 1 ) ) ) ( Print ( Pack ( play Pack ( pitch 12 ) ) ) Out ( list )
) \, add_script out_vol ( key ( * symbol ( w ) value ( 1 ) ) ) ( Print
( Pack ( play Pack ( pitch 1 ) ) ) Out ( list ) ) \, add_script out_vol
( key ( * symbol ( e ) value ( 1 ) ) ) ( Print ( Pack ( play Pack (
pitch 3 ) ) ) Out ( list ) ) \, add_script out_vol ( key ( * symbol
( t ) value ( 1 ) ) ) ( Print ( Pack ( play Pack ( pitch 6 ) ) ) Out
( list ) ) \, add_script out_vol ( key ( * symbol ( z ) value ( 1 )
) ) ( Print ( Pack ( play Pack ( pitch 8 ) ) ) Out ( list ) ) \, add_script
out_vol ( key ( * symbol ( u ) value ( 1 ) ) ) ( Print ( Pack ( play
Pack ( pitch 10 ) ) ) Out ( list ) );
#X obj 156 621 sdPackMatch;
#X obj 156 644 print;
#X obj 128 67 keyname;
#X obj 128 116 pack f s;
#X obj 126 181 sdEvent key value symbol;
#X obj 341 39 loadbang;
#X msg 367 418 clear \, add_script out_vol ( key ( * symbol ( a ) value
( 1 ) ) ) ( ) \, add_script out_vol ( key ( * symbol ( s ) value (
1 ) ) ) ( ) \, add_script out_vol ( key ( * symbol ( d ) value ( 1
) ) ) ( ) \, add_script out_vol ( key ( * symbol ( f ) value ( 1 )
) ) ( ) \, add_script out_vol ( key ( * symbol ( g ) value ( 1 ) )
) ( ) \, add_script out_vol ( key ( * symbol ( h ) value ( 1 ) ) )
( ) \, add_script out_vol ( key ( * symbol ( j ) value ( 1 ) ) ) (
) \, add_script out_vol ( key ( * symbol ( k ) value ( 1 ) ) ) ( )
\, add_script out_vol ( key ( * symbol ( w ) value ( 1 ) ) ) ( ) \,
add_script out_vol ( key ( * symbol ( e ) value ( 1 ) ) ) ( ) \, add_script
out_vol ( key ( * symbol ( t ) value ( 1 ) ) ) ( ) \, add_script out_vol
( key ( * symbol ( z ) value ( 1 ) ) ) ( ) \, add_script out_vol (
key ( * symbol ( u ) value ( 1 ) ) ) ( );
#X obj 126 158 sdGate;
#X obj 212 128 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 232 127 enable test;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 3 1 4 1;
#X connect 4 0 8 0;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 1 0;
#X connect 8 0 5 0;
#X connect 9 0 8 1;
#X restore 62 596 pd test_performance;
