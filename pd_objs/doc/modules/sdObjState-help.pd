#N canvas 0 30 681 722 10;
#X text 12 9 This module is just a convention how to build high level
objects in a patch.;
#X text 29 141 usage example;
#N canvas 0 30 681 722 basics 0;
#N canvas 0 30 681 722 test 0;
#X obj 80 13 inlet;
#X obj 63 337 s \$0-out1;
#X obj 696 363 r \$0-out1;
#X obj 707 387 r \$0-out2;
#X obj 180 336 s \$0-out2;
#X obj 685 339 r \$0-test;
#X obj 63 393 s \$0-out3;
#X obj 718 412 r \$0-out3;
#X obj 63 370 r \$0-sdProp;
#X obj 61 527 s \$0-out1;
#X obj 214 526 s \$0-out2;
#X obj 61 583 s \$0-out3;
#X obj 61 560 r \$0-sdPropSym;
#X obj 626 176 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 30 894 854 test-get 0;
#X obj 217 472 s \$0-test;
#X obj 202 537 s \$0-test;
#X obj 180 603 s \$0-test;
#X obj 147 25 inlet;
#X obj 170 404 t a a a;
#X obj 135 108 f \$0;
#X obj 147 77 t b b;
#X obj 135 344 pack s s;
#X obj 134 139 t a a;
#X obj 134 252 makefilename %d-sdPropSym-in;
#X msg 164 162 \; \$1-sdPropSym_rcv priv.set_noupdate null;
#X msg 217 436 list dest ( \$1 ) send ( get \$2 ) expect1 ( \$2 null
);
#X msg 202 499 list dest ( \$1 ) send ( get notDefined ) expect2 (
get notDefined );
#X msg 180 565 list dest ( \$1 ) send ( get ) expect1 ( \$2 null )
expect2 ( get );
#X obj 180 320 sdSymbolBang sdPropSym;
#X connect 3 0 6 0;
#X connect 4 0 13 0;
#X connect 4 1 12 0;
#X connect 4 2 11 0;
#X connect 5 0 8 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 8 1 10 0;
#X connect 9 0 7 0;
#X connect 11 0 0 0;
#X connect 12 0 1 0;
#X connect 13 0 2 0;
#X connect 14 0 7 1;
#X restore 626 202 pd test-get;
#N canvas 0 30 894 854 test-set 0;
#X obj 180 540 s \$0-test;
#X obj 157 85 inlet;
#X obj 135 168 f \$0;
#X obj 147 137 t b b;
#X obj 136 360 pack s s;
#X obj 153 458 t a a;
#X obj 138 197 t a a;
#X obj 136 268 makefilename %d-sdPropSym-in;
#X msg 180 504 list dest ( \$1 ) send ( set \$2 foo ) expect1 ( \$2
foo ) expect3 ( foo );
#X msg 167 220 \; \$1-sdPropSym_rcv priv.set_noupdate null;
#X obj 181 336 sdSymbolBang sdPropSym;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 1 8 0;
#X connect 6 0 7 0;
#X connect 6 1 9 0;
#X connect 7 0 4 0;
#X connect 8 0 0 0;
#X connect 10 0 4 1;
#X restore 522 203 pd test-set;
#X obj 522 173 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 373 175 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 30 894 854 test-set-intern 0;
#X obj 377 566 s \$0-test;
#X obj 319 41 inlet;
#X obj 310 169 f \$0;
#X obj 319 138 t b b;
#X obj 340 452 t a a;
#X obj 352 631 s \$0-test;
#X obj 313 245 t a a;
#X obj 296 407 pack s s s;
#X obj 316 482 t a a;
#X obj 280 513 t a a;
#X obj 117 599 t a a;
#X obj 134 723 s \$0-test;
#X obj 75 818 s \$0-test;
#X obj 95 639 t a a;
#X obj 311 296 makefilename %d-sdPropSym-in;
#X obj 348 327 makefilename %d-sdPropSym_rcv;
#X msg 381 478 \; \$3 priv.set_noupdate null;
#X msg 377 528 list dest ( \$3 ) send ( priv.set_noupdate foo ) expect1
( \$2 foo );
#X msg 352 595 list dest ( \$1 ) send ( get \$2 ) expect1 ( \$2 foo
);
#X text 606 505 privately set to "foo";
#X msg 148 622 \; \$3 priv.set_noupdate null;
#X text 486 577 check if this was successful "foo";
#X msg 76 782 list dest ( \$1 ) send ( get \$2 ) expect1 ( \$2 foo
);
#X msg 134 685 list dest ( \$3 ) send ( priv.set foo ) expect1 ( \$2
foo ) expect3 ( foo );
#X obj 324 384 sdSymbolBang sdPropSym;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 4 0 8 0;
#X connect 4 1 16 0;
#X connect 6 0 14 0;
#X connect 6 1 15 0;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 8 1 17 0;
#X connect 9 0 10 0;
#X connect 9 1 18 0;
#X connect 10 0 13 0;
#X connect 10 1 20 0;
#X connect 13 0 22 0;
#X connect 13 1 23 0;
#X connect 14 0 7 0;
#X connect 15 0 7 2;
#X connect 17 0 0 0;
#X connect 18 0 5 0;
#X connect 22 0 12 0;
#X connect 23 0 11 0;
#X connect 24 0 7 1;
#X restore 373 205 pd test-set-intern;
#X obj 504 134 t b b;
#X obj 449 165 t b b;
#X obj 63 288 r \$0-sdProp-in;
#X obj 61 479 r \$0-sdPropSym-in;
#X obj 61 503 sdPropertySym sdPropSym \$0;
#X obj 351 84 t b b;
#X obj 63 313 sdProperty sdProp \$0;
#X obj 791 373 print 2;
#X obj 280 171 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 30 894 854 test-get 0;
#X obj 217 472 s \$0-test;
#X obj 202 537 s \$0-test;
#X obj 180 603 s \$0-test;
#X obj 147 25 inlet;
#X obj 170 404 t a a a;
#X obj 135 108 f \$0;
#X obj 147 77 t b b;
#X obj 135 344 pack s s;
#X obj 134 139 t a a;
#X msg 202 499 list dest ( \$1 ) send ( get notDefined ) expect2 (
get notDefined );
#X obj 134 252 makefilename %d-sdProp-in;
#X msg 164 162 \; \$1-sdProp_rcv priv.set_noupdate 0;
#X msg 217 436 list dest ( \$1 ) send ( get \$2 ) expect1 ( \$2 0 )
;
#X msg 180 565 list dest ( \$1 ) send ( get ) expect1 ( \$2 0 ) expect2
( get );
#X obj 180 320 sdSymbolBang sdProp;
#X connect 3 0 6 0;
#X connect 4 0 13 0;
#X connect 4 1 9 0;
#X connect 4 2 12 0;
#X connect 5 0 8 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 8 0 10 0;
#X connect 8 1 11 0;
#X connect 9 0 1 0;
#X connect 10 0 7 0;
#X connect 12 0 0 0;
#X connect 13 0 2 0;
#X connect 14 0 7 1;
#X restore 280 197 pd test-get;
#N canvas 0 30 894 854 test-set 0;
#X obj 180 540 s \$0-test;
#X obj 157 85 inlet;
#X obj 135 168 f \$0;
#X obj 147 137 t b b;
#X obj 136 360 pack s s;
#X obj 153 458 t a a;
#X obj 138 197 t a a;
#X msg 180 504 list dest ( \$1 ) send ( set \$2 100 ) expect1 ( \$2
100 ) expect3 ( 100 );
#X obj 136 268 makefilename %d-sdProp-in;
#X msg 167 220 \; \$1-sdProp_rcv priv.set_noupdate 0;
#X obj 181 336 sdSymbolBang sdProp;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 1 7 0;
#X connect 6 0 8 0;
#X connect 6 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 4 0;
#X connect 10 0 4 1;
#X restore 176 198 pd test-set;
#X obj 176 168 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 27 170 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 0 30 894 854 test-set-intern 0;
#X obj 377 566 s \$0-test;
#X obj 319 41 inlet;
#X obj 310 169 f \$0;
#X obj 319 138 t b b;
#X obj 340 452 t a a;
#X obj 352 631 s \$0-test;
#X obj 313 245 t a a;
#X obj 296 407 pack s s s;
#X obj 316 482 t a a;
#X obj 280 513 t a a;
#X obj 117 599 t a a;
#X obj 134 723 s \$0-test;
#X obj 75 818 s \$0-test;
#X obj 95 639 t a a;
#X text 606 505 privately set to "foo";
#X text 486 577 check if this was successful "foo";
#X obj 348 327 makefilename %d-sdProp_rcv;
#X obj 311 294 makefilename %d-sdProp-in;
#X msg 381 478 \; \$3 priv.set_noupdate 0;
#X msg 377 528 list dest ( \$3 ) send ( priv.set_noupdate 100 ) expect1
( \$2 100 );
#X msg 352 595 list dest ( \$1 ) send ( get \$2 ) expect1 ( \$2 100
);
#X msg 148 622 \; \$3 priv.set_noupdate 0;
#X msg 134 685 list dest ( \$3 ) send ( priv.set 100 ) expect1 ( \$2
100 ) expect3 ( 100 );
#X msg 76 782 list dest ( \$1 ) send ( get \$2 ) expect1 ( \$2 100
);
#X obj 326 378 sdSymbolBang sdProp;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 4 0 8 0;
#X connect 4 1 18 0;
#X connect 6 0 17 0;
#X connect 6 1 16 0;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 8 1 19 0;
#X connect 9 0 10 0;
#X connect 9 1 20 0;
#X connect 10 0 13 0;
#X connect 10 1 21 0;
#X connect 13 0 23 0;
#X connect 13 1 22 0;
#X connect 16 0 7 2;
#X connect 17 0 7 0;
#X connect 19 0 0 0;
#X connect 20 0 5 0;
#X connect 22 0 11 0;
#X connect 23 0 12 0;
#X connect 24 0 7 1;
#X restore 27 200 pd test-set-intern;
#X obj 158 129 t b b;
#X obj 103 160 t b b;
#X obj 685 437 sdTest;
#X connect 0 0 24 0;
#X connect 2 0 35 1;
#X connect 3 0 35 2;
#X connect 5 0 35 0;
#X connect 7 0 35 3;
#X connect 8 0 6 0;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 16 0 15 0;
#X connect 17 0 18 0;
#X connect 19 0 20 0;
#X connect 19 1 14 0;
#X connect 20 0 18 0;
#X connect 20 1 15 0;
#X connect 21 0 25 0;
#X connect 22 0 23 0;
#X connect 23 0 9 0;
#X connect 23 1 10 0;
#X connect 24 0 33 0;
#X connect 24 1 19 0;
#X connect 25 0 1 0;
#X connect 25 1 4 0;
#X connect 27 0 28 0;
#X connect 30 0 29 0;
#X connect 31 0 32 0;
#X connect 33 0 34 0;
#X connect 33 1 28 0;
#X connect 34 0 32 0;
#X connect 34 1 29 0;
#X restore 251 88 pd test property;
#X obj 251 68 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 0 30 681 722 properties 0;
#X obj 135 175 print propOut;
#X floatatom 229 75 5 0 0 0 - - -;
#X obj 280 180 print redirect;
#X text 321 205 redirect to other properties;
#X symbolatom 192 275 10 0 0 0 - - -;
#X obj 142 382 print propOut;
#X obj 313 382 print redirect;
#X text 507 144 args: name ["\$0" init];
#X obj 558 212 r \$0-testProp;
#X obj 558 235 print testProp.intern;
#X msg 82 95 get testProp;
#X msg 229 99 set testProp \$1;
#X msg 407 99 get;
#X msg 412 126 get otherProp;
#X msg 410 303 get;
#X msg 412 330 get otherProp;
#X obj 138 570 print propOut;
#X obj 309 570 print redirect;
#X msg 406 491 get;
#X msg 408 518 get otherProp;
#X msg 105 272 get symProp;
#X msg 192 298 set symProp \$1;
#X msg 101 460 get listProp;
#X msg 244 456 set listProp a b c;
#X msg 253 482 set listProp;
#X obj 138 545 sdPropertyList listProp \$0;
#X text 318 243 produce an error:;
#X msg 297 269 set symProp 3;
#X msg 389 64 init;
#X obj 135 152 sdProperty testProp \$0 42 intern;
#X msg 403 266 init;
#X obj 589 360 r \$0-symProp;
#X obj 589 383 print symProp.intern;
#X obj 142 357 sdPropertySym symProp \$0 bla update;
#X floatatom 194 17 5 0 0 0 - - -;
#X msg 194 41 set_no_out testProp \$1;
#X floatatom 73 586 5 0 0 0 - - -;
#X obj 154 672 print propOut;
#X floatatom 507 602 5 0 0 0 - - -;
#X floatatom 642 601 5 0 0 0 - - -;
#X text 493 558 a number property can have a range, f 23;
#X msg 365 594 get_range;
#X msg 367 621 get_with_range;
#X msg 185 599 get_range testRange;
#X msg 154 625 set_in_range testRange \$1;
#X obj 154 649 sdProperty testRange \$0 42 intern -3 5 0.5;
#X msg 664 510 priv.set_min \$1;
#X msg 511 625 set_min testRange \$1;
#X floatatom 664 487 5 0 0 0 - - -;
#X msg 646 624 set_max testRange \$1;
#X obj 664 534 s \$0-testRange_rcv;
#X obj 403 673 print redirect;
#X floatatom 570 653 5 0 0 0 - - -;
#X msg 574 676 set_step testRange \$1;
#X floatatom 547 470 5 0 0 0 - - -;
#X msg 547 493 priv.set_step \$1;
#X obj 547 516 s \$0-testRange_rcv;
#X connect 1 0 11 0;
#X connect 4 0 21 0;
#X connect 8 0 9 0;
#X connect 10 0 29 0;
#X connect 11 0 29 0;
#X connect 12 0 29 0;
#X connect 13 0 29 0;
#X connect 14 0 33 0;
#X connect 15 0 33 0;
#X connect 18 0 25 0;
#X connect 19 0 25 0;
#X connect 20 0 33 0;
#X connect 21 0 33 0;
#X connect 22 0 25 0;
#X connect 23 0 25 0;
#X connect 24 0 25 0;
#X connect 25 0 16 0;
#X connect 25 1 17 0;
#X connect 27 0 33 0;
#X connect 28 0 29 0;
#X connect 29 0 0 0;
#X connect 29 1 2 0;
#X connect 30 0 33 0;
#X connect 31 0 32 0;
#X connect 33 0 5 0;
#X connect 33 1 6 0;
#X connect 34 0 35 0;
#X connect 35 0 29 0;
#X connect 36 0 44 0;
#X connect 38 0 47 0;
#X connect 39 0 49 0;
#X connect 41 0 45 0;
#X connect 42 0 45 0;
#X connect 43 0 45 0;
#X connect 44 0 45 0;
#X connect 45 0 37 0;
#X connect 45 1 51 0;
#X connect 46 0 50 0;
#X connect 47 0 45 0;
#X connect 48 0 46 0;
#X connect 49 0 45 0;
#X connect 52 0 53 0;
#X connect 53 0 45 0;
#X connect 54 0 55 0;
#X connect 55 0 56 0;
#X restore 48 87 pd properties;
#X text 29 61 how do "properties" work:;
#X obj 52 183 sdObjExample \$0-obj \$0-INSTR \$0-GLOBAL;
#X text 232 42 automated test for properties:;
#X text 30 129 properties are used stateful objects \, to describe
the objects state;
#X text 326 180 <- open the abstraction to see how to define stateful
objects;
#X text 38 314 now the object can be inspected and manipulated in a
standardised \, generic way:;
#X msg 33 483 list out ( clear );
#X obj 20 512 sdPackFromHuman;
#X obj 20 535 s \$0-obj;
#X text 29 371 invisibly connect the obj to a "listener" which stays
informed about the objs state:, f 21;
#X obj 35 574 r listener;
#X obj 75 595 print listener;
#X obj 554 592 r debug;
#X obj 554 615 print debug;
#X msg 32 430 list out ( add listener );
#X msg 33 457 list out ( del listener );
#N canvas 0 30 681 736 inspect 0;
#X obj 101 117 sdPackFromHuman;
#X msg 114 37 list get ( pitch );
#X msg 116 64 list get ( pitch out ( debug ) );
#X msg 117 93 list get ( out ( debug ) );
#X obj 101 140 outlet;
#X obj 277 279 sdObjGetAll debug get;
#X obj 277 256 sdReplace \$0;
#X obj 78 255 sdReplace \$0;
#X obj 78 280 sdObjGet debug pitch;
#X msg 78 232 symbol %0-obj;
#X msg 277 233 symbol %0-obj;
#X text 61 190 helper objs;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 9 0 7 0;
#X connect 10 0 6 0;
#X restore 247 376 pd inspect;
#N canvas 0 30 681 736 manipulate 0;
#X floatatom 124 97 5 0 0 0 - - -;
#X msg 124 119 list set ( pitch ( \$1 ) );
#X obj 123 149 sdPackFromHuman;
#X obj 123 172 outlet;
#X msg 300 121 list set ( descr ( bli ) );
#X msg 344 163 list set ( envelope ( 0 0.1 0.5 -3 0 ) );
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X restore 249 427 pd manipulate;
#N canvas 0 30 681 345 range 0;
#X obj 50 299 sdPackFromHuman;
#X obj 50 322 outlet;
#X msg 32 29 list get_range ( volume );
#X floatatom 313 97 5 0 1 0 - - -;
#X obj 328 16 vsl 15 64 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X msg 312 118 list set_in_range ( volume ( \$1 ) );
#X floatatom 71 200 5 0 0 0 - - -;
#X msg 58 235 list set_min ( volume ( \$1 ) );
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X restore 248 531 pd range infos;
#X obj 247 399 s \$0-obj;
#X obj 249 450 s \$0-obj;
#X obj 248 554 s \$0-obj;
#X obj 249 501 s \$0-obj;
#N canvas 0 30 681 722 send 0;
#X obj 55 89 sdPackFromHuman;
#X obj 55 112 outlet;
#X msg 52 26 list start ( pitch ( 20 ) );
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X restore 249 478 pd send events;
#X obj 412 593 r listener_2;
#X obj 412 616 print listener_2;
#X floatatom 422 421 5 0 0 0 - - -;
#X msg 422 443 raw set pitch \$1 \;;
#X text 409 401 send simple pd messages (prepend by "raw");
#X text 395 384 DEPRECATED:;
#X msg 182 157 list init 0;
#X obj 162 641 sdObjTrackAll;
#X obj 35 644 sdObjTrack pitch;
#X obj 35 667 sdUnPack;
#X floatatom 35 690 5 0 0 0 - - -;
#X obj 35 597 t a a;
#X obj 35 620 t a a;
#X obj 162 664 sdPackToMessage;
#X obj 162 687 route pitch volume;
#X floatatom 162 710 5 0 0 0 - - -;
#X floatatom 209 710 5 0 0 0 - - -;
#X obj 422 466 s \$0-obj;
#X connect 1 0 0 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 13 0 38 0;
#X connect 15 0 16 0;
#X connect 17 0 10 0;
#X connect 18 0 10 0;
#X connect 19 0 22 0;
#X connect 20 0 23 0;
#X connect 21 0 24 0;
#X connect 26 0 25 0;
#X connect 27 0 28 0;
#X connect 29 0 30 0;
#X connect 30 0 44 0;
#X connect 33 0 4 0;
#X connect 34 0 40 0;
#X connect 35 0 36 0;
#X connect 36 0 37 0;
#X connect 38 0 39 0;
#X connect 38 1 14 0;
#X connect 39 0 35 0;
#X connect 39 1 34 0;
#X connect 40 0 41 0;
#X connect 41 0 42 0;
#X connect 41 1 43 0;
#X restore 47 53 pd basics;
#X text 17 99 if you design your objects following the paradigm \,
you can use the utility objects to manage their state in advanced ways:
;
#N canvas 0 30 681 722 gui 0;
#X msg 498 10 list init 0;
#X obj 498 34 s \$0-GLOBAL.1;
#X text 11 12 sdObjState_num_obj_ui name global dest count;
#X text 23 27 or:;
#X text 11 44 sdObjState_num_obj_ui name global dest [prop1 ...];
#X text 11 222 sdObjState_bool_obj_ui name global dest count;
#X text 11 253 sdObjState_bool_obj_ui name global dest [prop1 ...]
;
#X text 28 236 or:;
#X text 28 366 or:;
#X text 11 352 sdObjState_sym_obj_ui name global dest count;
#X text 11 383 sdObjState_sym_obj_ui name global dest [prop1 ...];
#X text 28 556 or:;
#X text 11 542 sdObjState_events_compact_obj_ui name global dest count
;
#X text 11 573 sdObjState_events_compact_obj_ui name global dest [prop1
...];
#N canvas 0 30 681 722 bounding 0;
#X obj 220 348 sdBoundingBox;
#X msg 229 308 clear;
#X obj 220 371 print;
#X obj 210 309 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 290 186 5 0 0 0 - - -;
#X floatatom 333 189 5 0 0 0 - - -;
#X floatatom 374 186 5 0 0 0 - - -;
#X floatatom 246 163 5 0 0 0 - - -;
#X obj 229 198 f;
#X obj 212 173 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 231 271 t b a;
#X obj 258 225 sdEvent box x y width height;
#X text 311 349 calculates the bounding box of all events;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 11 1;
#X connect 5 0 11 2;
#X connect 6 0 11 3;
#X connect 7 0 8 1;
#X connect 8 0 11 0;
#X connect 9 0 8 0;
#X connect 10 0 3 0;
#X connect 10 1 0 1;
#X connect 11 0 10 0;
#X restore 492 524 pd bounding boxes;
#N canvas 0 30 681 722 header 0;
#X obj 147 195 outlet;
#X obj 167 102 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 167 122 set header \$1;
#X obj 167 52 loadbang;
#X msg 167 76 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X coords 0 -1 1 1 84 19 1 100 100;
#X restore 344 24 pd header;
#X obj 424 61 sdObjExample \$0-instr \$0-GLOBAL.1 \$0-gInstr;
#X obj 40 63 sdGui_num_obj_ui \$0-conn \$0-GLOBAL.1 \$0-instr 4;
#X obj 41 274 sdGui_bool_obj_ui \$0-test-bool \$0-GLOBAL.1 \$0-instr
3;
#X obj 44 407 sdGui_sym_obj_ui \$0-sym-test \$0-GLOBAL.1 \$0-instr
3;
#X obj 40 602 sdGui_events_compact_obj_ui \$0-events \$0-GLOBAL.1 \$0-instr
;
#X obj 424 105 sdGui_combined_obj_ui \$0-instr.gui \$0-GLOBAL.1 \$0-instr
;
#X obj 421 329 sdGui_events_obj_ui \$0-events-simple \$0-GLOBAL.1 \$0-instr
3;
#X obj 419 438 sdGui_events_obj_ui \$0-hurz \$0-GLOBAL.1 \$0-instr
stop;
#N canvas 0 30 681 722 header 0;
#X obj 147 195 outlet;
#X obj 167 102 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 167 122 set header \$1;
#X obj 167 52 loadbang;
#X msg 167 76 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X coords 0 -1 1 1 84 19 1 100 100;
#X restore 334 244 pd header;
#N canvas 0 30 681 722 header 0;
#X obj 147 195 outlet;
#X obj 167 102 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 167 122 set header \$1;
#X obj 167 52 loadbang;
#X msg 167 76 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X coords 0 -1 1 1 84 19 1 100 100;
#X restore 334 374 pd header;
#N canvas 0 30 681 722 header 0;
#X obj 147 195 outlet;
#X obj 167 102 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 167 122 set header \$1;
#X obj 167 52 loadbang;
#X msg 167 76 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X coords 0 -1 1 1 84 19 1 100 100;
#X restore 364 574 pd header;
#N canvas 0 30 681 722 header 0;
#X obj 147 195 outlet;
#X obj 167 102 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 167 122 set header \$1;
#X obj 167 52 loadbang;
#X msg 167 76 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X coords 0 -1 1 1 84 19 1 100 100;
#X restore 692 75 pd header;
#N canvas 0 30 681 722 header 0;
#X obj 147 195 outlet;
#X obj 167 102 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 167 122 set header \$1;
#X obj 167 52 loadbang;
#X msg 167 76 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X coords 0 -1 1 1 84 19 1 100 100;
#X restore 685 302 pd header;
#N canvas 0 30 681 722 header 0;
#X obj 147 195 outlet;
#X obj 167 102 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 167 122 set header \$1;
#X obj 167 52 loadbang;
#X msg 167 76 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X coords 0 -1 1 1 84 19 1 100 100;
#X restore 684 412 pd header;
#X connect 0 0 1 0;
#X connect 15 0 17 1;
#X connect 24 0 18 1;
#X connect 25 0 19 1;
#X connect 26 0 20 1;
#X connect 27 0 21 1;
#X connect 28 0 22 1;
#X connect 29 0 23 1;
#X restore 43 236 pd gui parts;
#X obj 43 163 sdObjState_example;
